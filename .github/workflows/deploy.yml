name: Deploy App

on:
  workflow_dispatch:
    inputs:
      app-name:
        description: 'Name of the application directory (e.g., nextjs-example)'
        required: true
        type: string
      app-path:
        description: 'Base path to the app group (e.g., package/zerobias)'
        required: true
        type: string
      env-name:
        description: 'Environment name (e.g., prod, dev, qa)'
        required: true
        type: string
      aws-account-id:
        description: 'AWS account ID for the deployment'
        required: true
        type: string
      s3-bucket:
        description: 'S3 bucket where the app will be deployed'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ZB_TOKEN: ${{ secrets.ZB_TOKEN }}

    steps:
      - name: Set environment variables
        shell: bash
        run: |
          echo "ENV_NAME=${{ github.event.inputs.env-name }}" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=${{ github.event.inputs.aws-account-id }}" >> $GITHUB_ENV
          echo "APP_NAME=${{ github.event.inputs.app-name }}" >> $GITHUB_ENV
          echo "APP_PATH=${{ github.event.inputs.app-path }}" >> $GITHUB_ENV
          echo "S3_BUCKET=${{ github.event.inputs.s3-bucket }}" >> $GITHUB_ENV
          echo "FULL_PATH=${{ github.event.inputs.app-path }}/${{ github.event.inputs.app-name }}" >> $GITHUB_ENV

      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          method: jwt
          url: ${{ secrets.VAULT_ADDR }}
          role: publishing-role
          path: gh-actions
          secrets: |
            operations-kv/data/ci/slack releasesWebhook | SLACK_RELEASES_WEBHOOK ;

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Extract package name from package.json
        id: get-pkg-name
        shell: bash
        run: |
          PKG_FILE="${FULL_PATH}/package.json"
          if [ ! -f "$PKG_FILE" ]; then
            echo "❌ package.json not found at $PKG_FILE"
            exit 1
          fi

          PKG_NAME=$(jq -r .name "$PKG_FILE")
          if [ -z "$PKG_NAME" ] || [ "$PKG_NAME" == "null" ]; then
            echo "❌ Invalid or missing 'name' in $PKG_FILE"
            exit 1
          fi

          echo "📦 Package name: $PKG_NAME"
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV

      - name: Deploy app to S3
        uses: zerobias-org/devops/actions/static-s3-app-release@main
        with:
          app-name: ${{ env.APP_NAME }}
          app-base-path: ${{ env.APP_PATH }}
          bucket-override-app-name: ${{ env.PKG_NAME }}
          s3-bucket: ${{ env.S3_BUCKET }}
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/gh-login-${{ env.ENV_NAME }}-custom-ui

      - name: Release announcement
        if: env.SLACK_RELEASES_WEBHOOK != ''
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":rocket: Deployed ${{ env.PKG_NAME }} to *${{ env.ENV_NAME }}*",
                    "emoji": true
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "S3 Bucket: `${{ env.S3_BUCKET }}`"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_RELEASES_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
