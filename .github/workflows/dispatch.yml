name: Dispatch Deploys

on:
  push:
    branches: [main, qa, dev]
    paths:
      - 'package/*/*/**'

permissions:
  id-token: write
  contents: read
  actions: write

jobs:
  detect-and-dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment context
        shell: bash
        run: |
          BRANCH=${GITHUB_REF##*/}
          echo "BRANCH_NAME=$BRANCH" >> $GITHUB_ENV
          
          if [[ "$BRANCH" == "main" ]]; then
            echo "ENV_NAME=prod" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_NAME=prod" >> $GITHUB_ENV
            echo "DNS_HOST=app" >> $GITHUB_ENV
          else
            echo "DNS_HOST=qa" >> $GITHUB_ENV
          
            if [[ "$BRANCH" == "dev" ]]; then
              echo "DNS_HOST=ci" >> $GITHUB_ENV
            fi
          
            echo "ENV_NAME=$BRANCH" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_NAME=dev" >> $GITHUB_ENV
          fi
          
          
          if [[ "$BRANCH" == "main" ]]; then
            echo "ENV_NAME=prod" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_NAME=prod" >> $GITHUB_ENV
          else
            echo "ENV_NAME=$BRANCH" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_NAME=dev" >> $GITHUB_ENV
          fi

      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          method: jwt
          url: ${{ secrets.VAULT_ADDR }}
          role: publishing-role
          path: gh-actions
          secrets: |
            operations-kv/data/aws/${{ env.AWS_ACCOUNT_NAME }} accountId | AWS_ACCOUNT_ID ;

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed app folders
        id: changed
        uses: tj-actions/changed-files@v46
        with:
          dir_names: true
          dir_names_max_depth: 3
          files: |
            package/*/*/**

      - name: Debug changed outputs
        shell: bash
        run: |
          echo "🔎 Changed app directories: ${{ steps.changed.outputs.all_modified_files }}"

      - name: Dispatch deploy workflow for each app
        shell: bash
        run: |
          set -x
          export GH_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          IFS=',' read -ra APPS <<< "${{ steps.changed.outputs.dir_names }}"

          if [ -z "${APPS[*]}" ]; then
            echo "✅ No apps changed, skipping deploy."
            exit 0
          fi

          for app_path in "${APPS[@]}"; do
            if [ ! -f "$app_path/package.json" ]; then
              echo "⚠️ Skipping $app_path (no package.json found)"
              continue
            fi

            app_name=$(jq -r '.name' "$app_path/package.json")

            if [ -z "$app_name" ] || [ "$app_name" == "null" ]; then
              echo "❌ No valid name in $app_path/package.json"
              continue
            fi

            echo "🚀 Triggering deploy for $app_name (from $app_path)"

            gh workflow run deploy.yml \
              --ref "${GITHUB_REF_NAME}" \
              -f app-name="$app_name" \
              -f app-path="$app_path" \
              -f env-name="${ENV_NAME}" \
              -f aws-account-id="${AWS_ACCOUNT_ID}" \
              -f s3-bucket="app-${BUCKET_ENV}-zerobias.com"
          done
        env:
          ENV_NAME: ${{ env.ENV_NAME }}
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
          BUCKET_ENV: ${{ env.DNS_HOST }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          CHANGED_APPS: ${{ steps.changed.outputs.dir_names }}
